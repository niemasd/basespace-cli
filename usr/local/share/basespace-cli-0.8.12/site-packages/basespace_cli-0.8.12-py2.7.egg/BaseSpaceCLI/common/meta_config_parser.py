
from ConfigParser import SafeConfigParser
import os

class MetaConfigParser(SafeConfigParser):
    """
    Helper class to read annotations from files (with the '@file' parameter). We don't use ConfigParser directly
    because all properties would have needed to be preceeded by a section header, and we like the flexibility of
    only adding section headers when we really want them. Globals are added to whatever group is specified in the 
    constructor.
    """
    def __init__(self,group):
        SafeConfigParser.__init__(self)
        self.group = group

    def read(self,annotationFile):
        from StringIO import StringIO
        annotations = StringIO()
        annotations.write("[%s]\n" % self.group)
        annotations.write(open(annotationFile).read())
        annotations.seek(0,os.SEEK_SET)
        SafeConfigParser.readfp(self,annotations)
