#
# Copyright (c) 2015 Illumina, Inc.
#
# This software is provided under the terms and conditions of the
# Illumina Open Source Software License 1.
#
# You should have received a copy of the Illumina Open Source
# Software License 1 along with this program. If not, see
# <https://github.com/sequencing/licenses/> 
#

"""
Interfacing to basemount and the Go tools.

"""


from .. import __version__
from ..common.interface import ExternalCommand

# basemount
class Mount(ExternalCommand):
    "access BaseSpace as a filesystem."

    __category__ = "Filesystem"

    def __init__(self, app, app_args, cmd_name=None):
        cmd = []
        if hasattr(self, 'path') and self.path:
            cmd = [ self.path ]

        super(Mount, self).__init__( cmd, app, app_args, self.__class__.__name__ )
        return



# basemount --unmount
class Unmount(ExternalCommand):
    "stop accessing BaseSpace as a filesystem."

    __category__ = "Filesystem"

    def __init__(self, app, app_args, cmd_name=None):
        cmd = []
        if hasattr(self, 'path') and self.path:
            cmd = [ self.path, '--unmount' ]

        super(Unmount, self).__init__( cmd, app, app_args, self.__class__.__name__ )
        return



# bscp
class Copy(ExternalCommand):
    "Copy between one or more source URLs to a destination URL"

    __category__ = "Filesystem"

    def __init__(self, app, app_args, cmd_name=None):
        cmd = []
        if hasattr(self, 'path') and self.path:
            cmd = [ self.path ]

        super(Copy, self).__init__( cmd, app, app_args, self.__class__.__name__ )
        return



# hydra
class SampleUpload(ExternalCommand):
    "upload a FASTQ-based sample into a BaseSpace project."

    __category__ = "Creating and listing"

    def __init__(self, app, app_args, cmd_name=None):
        cmd = []
        if hasattr(self, 'path') and self.path:
            cmd = [ self.path ]

        super(SampleUpload, self).__init__( cmd, app, app_args, self.__class__.__name__ )
        return
